{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven Nash\\\\Desktop\\\\streak\\\\frontend\\\\src\\\\screen\\\\landingPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { authAPI } from \"../api/apiClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LandingPage = () => {\n  _s();\n  const queryClient = useQueryClient();\n\n  // Check if user is already authenticated\n  const {\n    data: authData,\n    isLoading: authLoading\n  } = useQuery({\n    queryKey: [\"auth\"],\n    queryFn: authAPI.verifyAuth,\n    // Silent fail if not authenticated\n    onError: () => {}\n  });\n\n  // Handle Google OAuth success\n  const handleGoogleSuccess = async credentialResponse => {\n    // Send the credential to your backend\n    try {\n      // Example: You might want to send this token to your backend\n      // You'll need to adjust this based on your backend's expectations\n      console.log(credentialResponse);\n\n      // After successful login, invalidate auth query to fetch fresh data\n      queryClient.invalidateQueries({\n        queryKey: [\"auth\"]\n      });\n    } catch (error) {\n      console.error(\"Google auth error:\", error);\n    }\n  };\n\n  // Handle redirect to Google OAuth\n  const handleGoogleLogin = () => {\n    window.location.href = authAPI.getGoogleAuthUrl();\n  };\n\n  // If already authenticated, you might want to redirect\n  if (authData !== null && authData !== void 0 && authData.isAuthenticated) {\n    // You could redirect to dashboard or show different UI\n    console.log(\"User is already authenticated\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 sm:p-6 md:p-10 lg:p-10 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-extrabold bg-gradient-to-r from-amber-200 via-yellow-400 to-amber-300 bg-clip-text text-transparent drop-shadow-sm mb-3 sm:mb-4 md:mb-6\",\n        children: \"AI-Powered Streak Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-5xl sm:text-6xl md:text-7xl lg:text-9xl font-extrabold bg-gradient-to-r from-amber-200 via-yellow-400 to-amber-300 bg-clip-text text-transparent drop-shadow-sm mb-4 sm:mb-6\",\n        children: \"\\u26A1Streak\\u26A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {\n          useOneTap: true,\n          onSuccess: handleGoogleSuccess,\n          onError: () => console.log('Login Failed')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGoogleLogin,\n          className: \"ml-2 px-4 py-2 bg-blue-500 text-white rounded-md\",\n          children: \"Login with Google (Server Side)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-base sm:text-lg md:text-xl bg-gradient-to-r from-amber-400 via-yellow-900 to-amber-400 bg-clip-text text-transparent max-w-2xl mx-auto my-2\",\n        children: \"Click to streak. Get inspired. Stay healthy. See your progress.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(LandingPage, \"p2h6yHQPnPB5e62VAgtOEAqgY6w=\", false, function () {\n  return [useQueryClient, useQuery];\n});\n_c = LandingPage;\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","GoogleLogin","useQuery","useMutation","useQueryClient","authAPI","jsxDEV","_jsxDEV","LandingPage","_s","queryClient","data","authData","isLoading","authLoading","queryKey","queryFn","verifyAuth","onError","handleGoogleSuccess","credentialResponse","console","log","invalidateQueries","error","handleGoogleLogin","window","location","href","getGoogleAuthUrl","isAuthenticated","className","children","fileName","_jsxFileName","lineNumber","columnNumber","useOneTap","onSuccess","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Steven Nash/Desktop/streak/frontend/src/screen/landingPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { GoogleLogin } from \"@react-oauth/google\";\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { authAPI } from \"../api/apiClient\";\r\n\r\nconst LandingPage = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  // Check if user is already authenticated\r\n  const { data: authData, isLoading: authLoading } = useQuery({\r\n    queryKey: [\"auth\"],\r\n    queryFn: authAPI.verifyAuth,\r\n    // Silent fail if not authenticated\r\n    onError: () => {},\r\n  });\r\n\r\n  // Handle Google OAuth success\r\n  const handleGoogleSuccess = async (credentialResponse) => {\r\n    // Send the credential to your backend\r\n    try {\r\n      // Example: You might want to send this token to your backend\r\n      // You'll need to adjust this based on your backend's expectations\r\n      console.log(credentialResponse);\r\n      \r\n      // After successful login, invalidate auth query to fetch fresh data\r\n      queryClient.invalidateQueries({ queryKey: [\"auth\"] });\r\n    } catch (error) {\r\n      console.error(\"Google auth error:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle redirect to Google OAuth\r\n  const handleGoogleLogin = () => {\r\n    window.location.href = authAPI.getGoogleAuthUrl();\r\n  };\r\n\r\n  // If already authenticated, you might want to redirect\r\n  if (authData?.isAuthenticated) {\r\n    // You could redirect to dashboard or show different UI\r\n    console.log(\"User is already authenticated\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center justify-center\">\r\n      <div className=\"p-4 sm:p-6 md:p-10 lg:p-10 text-center\">\r\n        <h1 className=\"text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-extrabold bg-gradient-to-r from-amber-200 via-yellow-400 to-amber-300 bg-clip-text text-transparent drop-shadow-sm mb-3 sm:mb-4 md:mb-6\">\r\n          AI-Powered Streak Counter\r\n        </h1>\r\n        <h1 className=\"text-5xl sm:text-6xl md:text-7xl lg:text-9xl font-extrabold bg-gradient-to-r from-amber-200 via-yellow-400 to-amber-300 bg-clip-text text-transparent drop-shadow-sm mb-4 sm:mb-6\">\r\n          ⚡Streak⚡\r\n        </h1>\r\n        <div className=\"flex justify-center mb-4\">\r\n          {/* Option 1: Using @react-oauth/google component if you're handling tokens client-side */}\r\n          <GoogleLogin\r\n            useOneTap\r\n            onSuccess={handleGoogleSuccess}\r\n            onError={() => console.log('Login Failed')}\r\n          />\r\n\r\n          {/* Option 2: Or use a regular button that redirects to your backend Google auth route */}\r\n          <button \r\n            onClick={handleGoogleLogin}\r\n            className=\"ml-2 px-4 py-2 bg-blue-500 text-white rounded-md\"\r\n          >\r\n            Login with Google (Server Side)\r\n          </button>\r\n        </div>\r\n        <p className=\"text-base sm:text-lg md:text-xl bg-gradient-to-r from-amber-400 via-yellow-900 to-amber-400 bg-clip-text text-transparent max-w-2xl mx-auto my-2\">\r\n          Click to streak. Get inspired. Stay healthy. See your progress.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}