{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Steven Nash\\\\Desktop\\\\streak\\\\frontend\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\n\n// This whole set up is providing react that we will use Tanstack (same with redux set up)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient({});\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","root","createRoot","document","getElementById","QueryClient","QueryClientProvider","jsxDEV","_jsxDEV","queryClient","render","StrictMode","children","client","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Steven Nash/Desktop/streak/frontend/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\n\n// This whole set up is providing react that we will use Tanstack (same with redux set up)\nconst queryClient = new QueryClient({});\nroot.render(\n  <React.StrictMode>\n    <QueryClientProvider client = {queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,MAAMC,IAAI,GAAGH,QAAQ,CAACI,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjE,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;;AAExE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,IAAIJ,WAAW,CAAC,CAAC,CAAC,CAAC;AACvCJ,IAAI,CAACS,MAAM,cACTF,OAAA,CAACX,KAAK,CAACc,UAAU;EAAAC,QAAA,eACfJ,OAAA,CAACF,mBAAmB;IAACO,MAAM,EAAIJ,WAAY;IAAAG,QAAA,eACzCJ,OAAA,CAACT,GAAG;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACN,CACpB,CAAC;;AAED;AACA;AACA;AACAjB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}